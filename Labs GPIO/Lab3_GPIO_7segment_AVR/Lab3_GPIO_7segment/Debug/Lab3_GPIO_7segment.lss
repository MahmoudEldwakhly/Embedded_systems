
Lab3_GPIO_7segment.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000000b0  00000124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000012e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000160  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000143  00000000  00000000  000001bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000fe  00000000  00000000  000002ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001ed  00000000  00000000  000003fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000005ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003d61  00000000  00000000  00000610  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000004e  00000000  00000000  00004371  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000043bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000233  00000000  00000000  000043cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	29 c0       	rjmp	.+82     	; 0x54 <__ctors_end>
   2:	00 00       	nop
   4:	3a c0       	rjmp	.+116    	; 0x7a <__bad_interrupt>
   6:	00 00       	nop
   8:	38 c0       	rjmp	.+112    	; 0x7a <__bad_interrupt>
   a:	00 00       	nop
   c:	36 c0       	rjmp	.+108    	; 0x7a <__bad_interrupt>
   e:	00 00       	nop
  10:	34 c0       	rjmp	.+104    	; 0x7a <__bad_interrupt>
  12:	00 00       	nop
  14:	32 c0       	rjmp	.+100    	; 0x7a <__bad_interrupt>
  16:	00 00       	nop
  18:	30 c0       	rjmp	.+96     	; 0x7a <__bad_interrupt>
  1a:	00 00       	nop
  1c:	2e c0       	rjmp	.+92     	; 0x7a <__bad_interrupt>
  1e:	00 00       	nop
  20:	2c c0       	rjmp	.+88     	; 0x7a <__bad_interrupt>
  22:	00 00       	nop
  24:	2a c0       	rjmp	.+84     	; 0x7a <__bad_interrupt>
  26:	00 00       	nop
  28:	28 c0       	rjmp	.+80     	; 0x7a <__bad_interrupt>
  2a:	00 00       	nop
  2c:	26 c0       	rjmp	.+76     	; 0x7a <__bad_interrupt>
  2e:	00 00       	nop
  30:	24 c0       	rjmp	.+72     	; 0x7a <__bad_interrupt>
  32:	00 00       	nop
  34:	22 c0       	rjmp	.+68     	; 0x7a <__bad_interrupt>
  36:	00 00       	nop
  38:	20 c0       	rjmp	.+64     	; 0x7a <__bad_interrupt>
  3a:	00 00       	nop
  3c:	1e c0       	rjmp	.+60     	; 0x7a <__bad_interrupt>
  3e:	00 00       	nop
  40:	1c c0       	rjmp	.+56     	; 0x7a <__bad_interrupt>
  42:	00 00       	nop
  44:	1a c0       	rjmp	.+52     	; 0x7a <__bad_interrupt>
  46:	00 00       	nop
  48:	18 c0       	rjmp	.+48     	; 0x7a <__bad_interrupt>
  4a:	00 00       	nop
  4c:	16 c0       	rjmp	.+44     	; 0x7a <__bad_interrupt>
  4e:	00 00       	nop
  50:	14 c0       	rjmp	.+40     	; 0x7a <__bad_interrupt>
	...

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 eb       	ldi	r30, 0xB0	; 176
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	02 d0       	rcall	.+4      	; 0x7c <main>
  78:	19 c0       	rjmp	.+50     	; 0xac <_exit>

0000007a <__bad_interrupt>:
  7a:	c2 cf       	rjmp	.-124    	; 0x0 <__vectors>

0000007c <main>:
static unsigned char SegmentNumber[] = {0x3f,0x06 ,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F} ; 

int main (void)
{
    // Set DDRA pins 0, 2, and 4 as output (0x15 = 0b00010101)
    DDRA = 0X15;    // 0b00010101
  7c:	85 e1       	ldi	r24, 0x15	; 21
  7e:	8a bb       	out	0x1a, r24	; 26
    
    // Set pin 0 of DDRC as input
    ClearBit(DDRC, 0);
  80:	a0 98       	cbi	0x14, 0	; 20
    
    // Enable internal pull-up resistor on pin 0 of PORTC
    SetBit(PORTC, 0);
  82:	a8 9a       	sbi	0x15, 0	; 21
  84:	40 e6       	ldi	r20, 0x60	; 96
  86:	50 e0       	ldi	r21, 0x00	; 0
  88:	2b e6       	ldi	r18, 0x6B	; 107
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	fa 01       	movw	r30, r20
	unsigned char flag = 0 ; 
    while(1)
    {
		for (flag = 0 ; flag<= 10 ; flag ++)
		{
			PORTA = SegmentNumber[flag] ; 
  8e:	81 91       	ld	r24, Z+
  90:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	6f e9       	ldi	r22, 0x9F	; 159
  94:	86 e8       	ldi	r24, 0x86	; 134
  96:	91 e0       	ldi	r25, 0x01	; 1
  98:	61 50       	subi	r22, 0x01	; 1
  9a:	80 40       	sbci	r24, 0x00	; 0
  9c:	90 40       	sbci	r25, 0x00	; 0
  9e:	e1 f7       	brne	.-8      	; 0x98 <main+0x1c>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x26>
  a2:	00 00       	nop
    // Enable internal pull-up resistor on pin 0 of PORTC
    SetBit(PORTC, 0);
	unsigned char flag = 0 ; 
    while(1)
    {
		for (flag = 0 ; flag<= 10 ; flag ++)
  a4:	e2 17       	cp	r30, r18
  a6:	f3 07       	cpc	r31, r19
  a8:	91 f7       	brne	.-28     	; 0x8e <main+0x12>
  aa:	f0 cf       	rjmp	.-32     	; 0x8c <main+0x10>

000000ac <_exit>:
  ac:	f8 94       	cli

000000ae <__stop_program>:
  ae:	ff cf       	rjmp	.-2      	; 0xae <__stop_program>

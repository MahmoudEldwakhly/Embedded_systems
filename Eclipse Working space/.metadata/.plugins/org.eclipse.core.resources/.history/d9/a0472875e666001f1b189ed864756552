
/*
 ============================================================================
 Name        : lifo.c
 Author      : Mahmoud Eldwakhly
 Version     : first_data_structures_project
 ============================================================================
 */

#include "lifo.h"

LIFO_status LIFO_Add_item (LIFO_Buf_t* lifo_buffer , unsigned int item)
{
	// 	Checking lifo is valid or not

	if (!lifo_buffer->base || !lifo_buffer->head)
		return LIFO_Null ;

	// Checking lifo is full or not

	//	if (lifo_buffer->head >= (lifo_buffer->base + (lifo_buffer->length*4)))
	if ( lifo_buffer->count == lifo_buffer->length )
		return LIFO_full ;

	// add the value

	*(lifo_buffer->head) = item ;
	lifo_buffer->head++ ;
	lifo_buffer->count++ ;
	return LIFO_no_error ;

}

LIFO_status LIFO_get_item (LIFO_Buf_t* lifo_buffer , unsigned int* item)
{
	// 	Checking lifo is valid or not
	if (!lifo_buffer->base || !lifo_buffer->head)
		return LIFO_Null ;

	// Checking lifo is empty ?

	if ( lifo_buffer->count == 0 )
		return LIFO_empty  ;

	lifo_buffer->head -- ;
	*item = *(lifo_buffer->head) ;
	return LIFO_no_error ;



}
LIFO_status LIFO_init (LIFO_Buf_t* lifo_buffer , unsigned int* buffer , unsigned int length )
{
	if (buffer == NULL )
		return LIFO_Null  ;

	lifo_buffer->base = buffer ;
	lifo_buffer->head = buffer ;
	lifo_buffer->length = length ;
	lifo_buffer->count = 0 ;
	return LIFO_no_error ;

}
